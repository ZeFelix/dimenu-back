# Generated by Django 2.0.7 on 2018-07-14 19:11

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Name of the attribute')),
                ('status', models.BooleanField(verbose_name='Status of the attribute')),
                ('is_additional', models.BooleanField(verbose_name='Indicates if an item is additional')),
                ('image', models.ImageField(blank=True, null=True, upload_to='attributes/%Y/%m/%d')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Avaliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fantasy_name', models.CharField(default='company default', max_length=45, verbose_name='Fantasy name')),
                ('cnpj', models.CharField(max_length=45, unique=True, verbose_name='CNPJ')),
                ('email', models.EmailField(max_length=45, unique=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=13, verbose_name='Phone')),
                ('qrcode_identification', models.CharField(max_length=50, unique=True, verbose_name='Qr code for identification')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ['fantasy_name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('cpf', models.CharField(max_length=12, verbose_name='CPF')),
                ('phone', models.CharField(max_length=15, verbose_name='Phone')),
                ('is_client', models.BooleanField(default=False, verbose_name='Is mobile')),
                ('is_owner', models.BooleanField(default=False, verbose_name='Is owner')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Company')),
            ],
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_do', models.BooleanField(default=True, verbose_name='Order: to do')),
                ('doing', models.BooleanField(default=False, verbose_name='Order: doing')),
                ('done', models.BooleanField(default=False, verbose_name='Order: done')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
        ),
        migrations.CreateModel(
            name='OrderAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('status', models.BooleanField(verbose_name='Indicates whether the attribute was removed and added to this order')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Attribute')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Name of the product')),
                ('description', models.TextField(verbose_name='Description of the product')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Price of the product')),
                ('status', models.BooleanField(verbose_name='Status of the product')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/%Y/%m/%d')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Company')),
                ('product_attribute', models.ManyToManyField(to='api.Attribute')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification', models.CharField(max_length=45, verbose_name='Table identification')),
                ('qrcode', models.CharField(max_length=50, unique=True, verbose_name='Qr code for identification of the table')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Company')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='attribute',
            field=models.ManyToManyField(through='api.OrderAttribute', to='api.Attribute'),
        ),
        migrations.AddField(
            model_name='order',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Company'),
        ),
        migrations.AddField(
            model_name='order',
            name='product',
            field=models.ManyToManyField(through='api.ProductOrder', to='api.Product'),
        ),
        migrations.AddField(
            model_name='order',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Table'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.CustomUser'),
        ),
        migrations.AddField(
            model_name='category',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Company'),
        ),
        migrations.AddField(
            model_name='avaliation',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Company'),
        ),
        migrations.AddField(
            model_name='avaliation',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Product'),
        ),
        migrations.AddField(
            model_name='avaliation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.CustomUser'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Company'),
        ),
        migrations.AlterUniqueTogether(
            name='table',
            unique_together={('company', 'identification')},
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('company', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='customuser',
            unique_together={('company', 'cpf'), ('is_client', 'cpf')},
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('company', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='attribute',
            unique_together={('company', 'name')},
        ),
    ]
